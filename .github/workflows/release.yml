name: release

on:
  push:
    branches:
      - "!*"
    tags:
      - "**"
jobs:
  codestyle:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set up Rust
        uses: hecrj/setup-rust-action@v1
        with:
          components: rustfmt
          rust-version: stable
      - uses: actions/checkout@v1
      - run: cargo fmt --all -- --check

  lint:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set up Rust
        uses: hecrj/setup-rust-action@v1
        with:
          components: clippy
      - uses: actions/checkout@v1
      - run: cargo clippy --all-targets -- -D clippy::all

  compile:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set up Rust
        uses: hecrj/setup-rust-action@v1
      - uses: actions/checkout@master
      - run: cargo check --all

  test:
    needs: [codestyle, lint, compile]
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
    runs-on: ${{ matrix.os }}

    steps:
      - name: Setup Rust
        uses: hecrj/setup-rust-action@v1
        with:
          rust-version: ${{ matrix.rust }}
      - name: Checkout
        uses: actions/checkout@v1
      - name: Test
        run: cargo test

  build_and_upload_artifacts:
    name: Upload Artifacts
    needs: [test]
    strategy:
      matrix:
        build: [linux, macos]
        include:
        - build: linux
          os: ubuntu-latest
          target: x86_64-unknown-linux
        - build: macos
          os: macos-latest
          target: x86_64-apple-darwin

    steps:
      - name: Set up Rust
        uses: hecrj/setup-rust-action@v1
      - uses: actions/checkout@master
      - run: cargo build --release
      - run: |
          mkdir release
          mv target/release/wutag release/
      - working-directory: ./release
        run: |
          tar -zcvf wutag-${{ matrix.target }}.tar.gz .
          tar -Jcvf wutag-${{ matrix.target }}.tar.xz .

      - name: Get the version
        id: get_version
        run: echo ::set-output name=WUTAG_VERSION::${GITHUB_REF/refs\/tags\//}
      - name: Set archive name
        id: set_name
        run: echo ::set-output name=WUTAG_ARCHIVE::wutag-${{steps.get_version.outputs.WUTAG_VERSION}}-${{ matrix.target}}
      - name: Upload gz
        uses: svenstaro/upload-release-action@v2
        with:
          repo_name: wojciechkepka/wutag
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: release/${{ steps.set_name.outputs.WUTAG_ARCHIVE }}.tar.gz
          asset_name: ${{ steps.set_name.outputs.WUTAG_ARCHIVE }}.tar.gz
          tag: ${{ steps.get_version.outputs.WUTAG_VERSION }}
          overwrite: true
      - name: Upload xz
        uses: svenstaro/upload-release-action@v2
        with:
          repo_name: wojciechkepka/wutag
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: release/${{ steps.set_name.outputs.WUTAG_ARCHIVE }}.tar.xz
          asset_name: ${{ steps.set_name.outputs.WUTAG_ARCHIVE }}.tar.xz
          tag: ${{ steps.get_version.outputs.WUTAG_VERSION }}
          overwrite: true
